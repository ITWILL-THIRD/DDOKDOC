<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.todoc.hospital.dao.HospitalDAO">
<!-- 주은 -->
	<!-- 	병원 로그인 -->
	<select id="getHos" resultType="HospitalVO">
<!-- 		SELECT *  -->
<!-- 		FROM HOSPITAL -->
<!-- 		WHERE HOSID = #{hosId} AND HOSPW = #{hosPw} -->
	SELECT * 
	FROM HOSPITAL A, HOSADDRESS B, HOSTIME C
	WHERE A.HOSIDX = B.HOSIDX AND A.HOSIDX = C.HOSIDX
	AND A.HOSID = #{hosId} AND HOSPW = #{hosPw}
	</select>
	
	
<!-- 	병원 아이디 중복체크 -->
	<select id="hosId" resultType="int">
		SELECT COUNT(*) FROM HOSPITAL
		WHERE HOSID = #{hosId}
	</select>
	
<!-- 	병원정보수정HOSPITAL -->
	<update id="updateHoUser" parameterType="HospitalVO">
		UPDATE HOSPITAL
		SET HOSNAME = #{hosName}, HOSPHONE = #{hosPhone}
		WHERE HOSIDX = #{hosIdx}
	</update>
	
<!-- 	병원정보수정HOSADDRESS -->
	<update id="updateHosAddress" parameterType="HospitalVO">
		UPDATE HOSADDRESS
		SET ADDRESSNAME = #{addressName}, ROADADDRESSNAME = #{roadAddressName}, DETAILADDRESS = #{detailAddress}
		WHERE HOSIDX = #{hosIdx}
	</update>

	
	<!-- 	비밀번호 수정 -->
	<update id="updateHoPwd" parameterType="HospitalVO">
		UPDATE HOSPITAL 
		SET HOSPW = #{hosPw}
		WHERE HOSIDX = #{hosIdx}
	</update>
	
<!-- 	병원탈퇴 -->
	<delete id="deleteHos" parameterType="HospitalVO">
		DELETE FROM HOSPITAL WHERE HOSIDX = #{hosIdx}
	</delete>
	
<!-- 	병원 아이디 찾기 -->
	<select id="hoFindId" resultType="HospitalVO">
		SELECT * FROM HOSPITAL
		WHERE HOSNAME = #{hosName} AND HOSPHONE = #{hosPhone}
	</select>
	
<!-- 	병원 비번찾기 -->
	<select id="hoFindPwd" resultType="int">
		SELECT COUNT(*) FROM HOSPITAL
		WHERE HOSNAME = #{hosName} AND HOSID = #{hosId}
	</select>
	
<!-- 	임시비번으로 업데이트 -->
	<update id="hoUpdateExPwd" parameterType="HospitalVO">
		UPDATE HOSPITAL
		SET HOSPW = #{hosPw}
		WHERE HOSNAME = #{hosName} AND HOSID = #{hosId}
	</update>
	
	<!-- 병원hosIdx 조회 -->
	<select id="getHosIdx" parameterType="HospitalVO" resultType="int">
		SELECT HOSIDX 
		FROM HOSPITAL
		WHERE HOSID = #{hosId} AND HOSPW = #{hosPw}
	</select>
	
	<!-- 병원 사진vo 조회 -->
	<select id="getHosImgList" parameterType="int" resultType="HosImgVO">
		SELECT * FROM HOSIMG WHERE HOSIDX = #{hosIdx}
	</select>
	
	<!-- 병원 회원가입(다른 테이블 4개 각자 입력 - HOSTIM은 TimeMapper로 따로 작성) -->
<!-- 병원 정보 입력 -->
	<insert id="insertHospital" parameterType="HospitalVO">
		INSERT INTO HOSPITAL
			(HOSIDX, HOSID, HOSPW, HOSNAME, HOSPHONE
			, ANIMAL, SCORE, CONDITION, CERTIFICATEIMG)
		VALUES ((SELECT NVL(MAX(HOSIDX), 0) + 1 FROM HOSPITAL), #{hosId}, #{hosPw}, #{hosName}, #{hosPhone}
<!-- 		VALUES (SEQ_HOSIDX.NEXTVAL, #{hosId}, #{hosPw}, #{hosName}, #{hosPhone} -->
			, #{animal}, #{score}, '승인전', #{certificateImg})
	</insert>
<!-- 병원 사진(파일 여러장) 입력 -->
	<insert id="insertHosImg" parameterType="HospitalVO">
		INSERT INTO HOSIMG(IMGIDX, HOSIDX, HOSIMG)
		VALUES ((SELECT NVL(MAX(IMGIDX), 0) + 1 FROM HOSIMG), #{hosIdx}, #{hosImg})
<!-- 		VALUES (SEQ_IMGIDX.NEXTVAL, #{hosIdx}, #{hosImg}) -->
	</insert>
<!-- 병원 주소 입력 -->
	<insert id="insertHosAddress" parameterType="HospitalVO">
		INSERT INTO HOSADDRESS
			(HOSIDX, ADDRESSNAME, ROADADDRESSNAME, DETAILADDRESS, ADDX
			, ADDY, SIDO, SIGUNGU)
		VALUES (#{hosIdx}, #{addressName}, #{roadAddressName}, #{detailAddress}, #{addx}
			, #{addy}, #{sido}, #{sigungu})
	</insert>
	
<!-- 안쓰는 매퍼인지 확인 후, 삭제 처리 -->	
<!-- 	<select id="getHospitalList" parameterType="HospitalVO" resultType="HospitalVO"> -->
<!-- 		SELECT * -->
<!-- 		FROM HOSPITAL -->
<!-- 		ORDER BY SEQ DESC -->
<!-- 	</select> -->

<!-- 	<select id="getHospital" parameterType="HospitalVO" resultType="HospitalVO"> -->
<!-- 		SELECT H.HOSIDX, H.HOSID, H.HOSPW, H.HOSNAME, H.HOSPHONE, H.ANIMAL, H.SCORE, H.CONDITION,  -->
<!-- 		        T.OPENTIME, T.CLOSETIME, T.LUNCHTIME, T.ENDLUNCHTIME, -->
<!-- 		        A.ADDRESSNAME, A.ROADADDRESSNAME, A.ADDX, A.ADDY, A.SIDO, A.SIGUNGU -->
<!-- 		FROM HOSPITAL H, HOSTIME T, HOSADDRESS A -->
<!-- 		WHERE H.HOSIDX = T.HOSIDX -->
<!-- 		AND H.HOSIDX = A.HOSIDX -->
<!-- 		AND H.HOSIDX = #{hosIdx} -->
<!-- 	</select> -->
	<!-- 병원 수정(승인완료 처리) -->
	<update id="updateHospital" parameterType="HospitalVO">
		UPDATE HOSPITAL
		SET CONDITION = '승인완료'
		WHERE HOSIDX = #{hosIdx}
	</update>
	<!-- 병원 정보 1개 조회 -->
	<select id="selectOne" parameterType="int" resultType="HospitalVO">
		SELECT *
		FROM HOSPITAL H, HOSTIME HT, HOSADDRESS HA
		WHERE H.HOSIDX = HT.HOSIDX
		AND H.HOSIDX = HA.HOSIDX
		AND H.HOSIDX = #{hosIdx}
	</select>
	
	<!-- 병원 전체 조회 -->
	<select id="selectList" resultType="HospitalVO">
		SELECT *
		FROM HOSPITAL H, HOSTIME HT, HOSADDRESS HA
		WHERE H.HOSIDX = HT.HOSIDX
		AND H.HOSIDX = HA.HOSIDX
		ORDER BY H.HOSIDX DESC
	</select>
	
	<!-- 병원 리뷰 조회 -->
	<select id="getHosReview" parameterType="int" resultType="HosReviewVO">
		SELECT H.*, U.NICKNAME AS NICKNAME, R.RESERDATE
		FROM HOSREVIEW H, DDOKUSER U, RESERVATION R
		WHERE H.USERIDX = U.USERIDX
        AND H.RESERIDX = R.RESERIDX
		AND H.HOSIDX = #{hosIdx}
		ORDER BY H.HOSIDX DESC
	</select>
	
  	<!-- 동적처리(병원 정보 조회) -->
    <select id="getHosSearch" resultType="HospitalVO">
        SELECT *
        FROM HOSPITAL H
        JOIN HOSADDRESS A ON A.HOSIDX = H.HOSIDX
        JOIN HOSTIME T ON T.HOSIDX = H.HOSIDX
        <where>
            <choose>
                <when test='searchCondition == "all"'>
					AND H.CONDITION = '결제완료'
                </when>
                <when test='searchCondition == "search" and searchKeyword != "" '>
                	AND H.CONDITION = '결제완료'
                    AND (
                    H.HOSNAME LIKE '%' || #{searchKeyword} || '%'
                    OR A.ADDRESSNAME LIKE '%' || #{searchKeyword} || '%'
                    OR A.ROADADDRESSNAME LIKE '%' || #{searchKeyword} || '%'
                    OR ANIMAL LIKE '%' || #{searchKeyword} || '%'
                )
                </when>
                <when test='searchCondition == "address"'>
                	AND H.CONDITION = '결제완료'
					AND A.SIDO LIKE '%' || #{sido} || '%'
					AND A.SIGUNGU LIKE '%' || #{sigungu} || '%'
                </when>
                <when test='searchCondition == "addressName" and searchKeyword != "" '>
					AND H.CONDITION = '결제완료'
					AND (A.ADDRESSNAME LIKE '%' || #{searchKeyword} || '%'
                    OR A.ROADADDRESSNAME LIKE '%' || #{searchKeyword} || '%')
                </when>
                <when test='searchCondition == "common"'>
                	AND H.CONDITION = '결제완료'
					AND ANIMAL = '일반'
                </when>
                <when test='searchCondition == "special"'>
                	AND H.CONDITION = '결제완료'
                    AND ANIMAL = '특수'
                </when>
                <when test='searchCondition == "night"'>
                	AND H.CONDITION = '결제완료'
                    <![CDATA[
                    AND TO_CHAR(T.CLOSETIME, 'HH24:MI') > '18:00'
                    AND TO_CHAR(T.CLOSETIME, 'HH24:MI') <= '23:59'
                    AND TO_CHAR(T.OPENTIME, 'HH24:MI') != '00:00'
                    ]]>
                </when>
                <when test='searchCondition == "24h"'>
                	AND H.CONDITION = '결제완료'
                    AND TO_CHAR(T.OPENTIME, 'HH24:MI') = '00:00'
                    AND TO_CHAR(T.CLOSETIME, 'HH24:MI') = '23:59'
                </when>
            </choose>
        </where>
		ORDER BY H.HOSIDX DESC
    </select>
	
	<!-- 병원 리뷰 입력 -->
 	<insert id="insertReview" parameterType="HosReviewVO">
		INSERT INTO HOSREVIEW(REVIEWIDX, HOSIDX, USERIDX, CONTENT, SCORE, REVIEWDATE, RESERIDX) 
		VALUES((SELECT NVL(MAX(REVIEWIDX), 0) + 1 FROM HOSREVIEW), 
				#{hosIdx}, #{userIdx}, #{content}, #{score}, SYSDATE, #{reserIdx})
	</insert>
	
	<!-- 병원 리뷰 수정 -->
	<update id="updateReview" parameterType="HosReviewVO">
		UPDATE HOSREVIEW 
		SET CONTENT = #{content}, SCORE = #{score}, REVIEWDATE = SYSDATE 
		WHERE REVIEWIDX = #{reviewIdx}
	</update>
	
	<!-- 병원 휴무 정보 조회 -->
	<select id="hosHoliday" parameterType="int" resultType="date">
		SELECT HOLIDATE
		FROM HOSHOLIDAY
		WHERE HOSIDX = #{hosIdx}
	</select>

	<!-- 병원 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="HosReviewVO">
		DELETE FROM HOSREVIEW
		WHERE REVIEWIDX = #{reviewIdx}
	</delete>
	
	<!-- 사용자 예약 내역 조회 -->
<!-- 	<select id="getReserList" parameterType="ReservationVO" resultType="int">
		SELECT COUNT(*) 
		FROM RESERVATION 
		WHERE USERIDX = #{userIdx} 
		AND HOSIDX = #{hosIdx}
		AND CONDITION = 'FINISH'
	</select> -->
	
	<!-- 병원 별점 업데이트(입력,수정,삭제 시) -->
	<update id="updateAvgScore" parameterType="HospitalVO">
		UPDATE HOSPITAL 
		SET SCORE = #{score}
		WHERE HOSIDX= #{hosIdx}
	</update>
	
	<!-- 리뷰 입력,삭제 시 사용자 상태 업데이트 -->
	<update id="updateCondition" parameterType="ReservationVO">	
	    UPDATE RESERVATION
	    SET CONDITION = CASE 
	                        WHEN CONDITION = 'REVIEW' THEN 'FINISH'
	                        WHEN CONDITION = 'FINISH' THEN 'REVIEW'
	                    END
	    WHERE USERIDX = #{userIdx}
	    AND RESERIDX = #{reserIdx}
	</update>
	
	<!-- 예약 후 진료 완료 상태인 사용자 리스트 조회 -->
	<select id="getFinishList" parameterType="ReservationVO" resultType="ReservationVO">
		SELECT R.*, P.PETNAME 
		FROM RESERVATION R, MYPET P 
		WHERE P.PETIDX = R.PETIDX 
		AND R.USERIDX = #{userIdx} 
		AND R.HOSIDX = #{hosIdx} 
		AND R.CONDITION='FINISH'
	</select>
	
	<!-- 마이페이지 - 작성할 리뷰 목록 -->
	<select id="getReviewToWrite" parameterType="int" resultType="ReservationVO">
		SELECT R.*, P.PETNAME, H.HOSNAME 
		FROM RESERVATION R, MYPET P, HOSPITAL H
		WHERE P.PETIDX = R.PETIDX 
		AND R.HOSIDX = H.HOSIDX
        AND R.USERIDX = #{userIdx}
		AND R.CONDITION='FINISH'
	</select>
	
	<!-- 마이페이지 - 작성한 리뷰 목록 -->
	<select id="getReviewList" parameterType="int" resultType="HosReviewVO">
		SELECT H.HOSNAME, HR.*, R.RESERDATE
		FROM HOSPITAL H, HOSREVIEW HR, DDOKUSER U, RESERVATION R
		WHERE H.HOSIDX = HR.HOSIDX 
        AND HR.USERIDX = U.USERIDX
        AND HR.RESERIDX = R.RESERIDX
        AND HR.USERIDX = #{userIdx}
		ORDER BY H.HOSIDX DESC
	</select>
	
	<!-- 마이페이지 - 작성된 리뷰 목록 -->
	<select id="getHosReviewList" parameterType="int" resultType="HosReviewVO">
		SELECT H.*, U.NICKNAME AS NICKNAME, R.RESERDATE
		FROM HOSREVIEW H, DDOKUSER U, RESERVATION R
		WHERE H.USERIDX = U.USERIDX
        AND H.RESERIDX = R.RESERIDX
		AND H.HOSIDX = #{hosIdx}
		ORDER BY H.HOSIDX DESC
	</select>
	
	<!-- 병원 휴무 입력 -->
	<insert id="insertHolidays" parameterType="HolidayInsertParams">
		INSERT INTO HOSHOLIDAY (HOSIDX, HOLIDATE)
        VALUES (#{hosIdx}, #{holiDate})
	</insert>
	

	<!-- 병원 휴무 삭제 -->
	<delete id="deleteHosHoliday" parameterType="HolidayInsertParams">
		DELETE 
		FROM HOSHOLIDAY
		WHERE HOSIDX = #{hosIdx}
		AND HOLIDATE = #{holiDateStr}
	</delete>

<!-- 	내가 작성한 리뷰-주은 -->
	<select id="myReviewList" parameterType="int" resultType="HosReviewVO">
		SELECT H.HOSNAME, HR.*, R.RESERDATE, U.NICKNAME AS NICKNAME
		FROM HOSPITAL H, HOSREVIEW HR, DDOKUSER U, RESERVATION R
		WHERE H.HOSIDX = HR.HOSIDX 
        AND HR.USERIDX = U.USERIDX
        AND HR.RESERIDX = R.RESERIDX
        AND HR.USERIDX = #{userIdx}
		ORDER BY H.HOSIDX DESC
	</select>

	
</mapper>

